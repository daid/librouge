cmake_minimum_required(VERSION 3.12)
project(librouge)

file(GLOB_RECURSE SOURCES ${CMAKE_CURRENT_LIST_DIR}/src/*.cpp ${CMAKE_CURRENT_LIST_DIR}/include/*.h)
add_library(librouge OBJECT ${SOURCES})

include("${CMAKE_CURRENT_LIST_DIR}/cmake/glm.cmake")

if (EMSCRIPTEN)
    add_library(SDL2 INTERFACE)
    target_compile_options(SDL2 INTERFACE -sUSE_SDL=2 -sALLOW_MEMORY_GROWTH=1 -fno-exceptions)
    target_link_options(SDL2 INTERFACE -sUSE_SDL=2 -sALLOW_MEMORY_GROWTH=1 -fno-exceptions)
    add_library(SDL2::SDL2 ALIAS SDL2)
else()
    find_package(SDL2 REQUIRED)
    if (NOT TARGET SDL2)
        add_library(SDL2 INTERFACE)
        target_include_directories(SDL2 INTERFACE "${SDL_INCLUDE_DIRS}")
        target_link_libraries(SDL2 INTERFACE "${SDL2_LIBRARIES}")
        add_library(SDL2::SDL2 ALIAS SDL2)
    endif()
endif()

target_link_libraries(librouge PUBLIC glm::glm SDL2::SDL2)
target_include_directories(librouge PUBLIC ${CMAKE_CURRENT_LIST_DIR}/include)
target_compile_options(librouge PUBLIC -Wall -Wextra)
target_compile_features(librouge PUBLIC cxx_std_17)
message(INFO ${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_CURRENT_LIST_DIR})
if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_CURRENT_LIST_DIR})
    add_subdirectory(template)
endif()